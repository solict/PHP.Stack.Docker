---
#
#    CentOS 6 (centos6) docker-compose.yml
#    Copyright (C) 2016 SOL-ICT
#    This file is part of the Docker High Performance PHP Stack.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# For Docker Compose v2+ only
version: '2'

#
# Services/profiles
#
services:

  memcached14:
    labels:
      - "${service_memcached14_label_url}.description=${service_memcached14_description}"
      - "${service_memcached14_label_url}.vendor=${project_vendor}"
      - "${service_memcached14_label_url}.license=${project_license}"
      - "${service_memcached14_label_url}.architecture=${project_architecture}"
      - "${service_memcached14_label_url}.version=${project_version}"
    image: "${service_memcached14_image_url}"
    build:
      context: "${general_context}"
      dockerfile: "${service_memcached14_dockerfile}"
      args:
        app_memcached_user: "${service_memcached14_args_app_memcached_user}"
        app_memcached_group: "${service_memcached14_args_app_memcached_group}"
        app_memcached_loglevel: "${service_memcached14_args_app_memcached_loglevel}"
        app_memcached_auth_sasl: "${service_memcached14_args_app_memcached_auth_sasl}"
        app_memcached_listen_proto: "${service_memcached14_args_app_memcached_listen_proto}"
        app_memcached_listen_addr: "${service_memcached14_args_app_memcached_listen_addr}"
        app_memcached_listen_port: "${service_memcached14_args_app_memcached_listen_port}"
        app_memcached_limit_backlog: "${service_memcached14_args_app_memcached_limit_backlog}"
        app_memcached_limit_concurent: "${service_memcached14_args_app_memcached_limit_concurent}"
        app_memcached_limit_memory: "${service_memcached14_args_app_memcached_limit_memory}"
    logging:
      driver: "${general_logging_driver}"
    networks:
      - backend
    ports:
      - "${service_memcached14_networking_port_int1}"
      - "${service_memcached14_networking_port_int2}"
    working_dir: "${general_working_dir}"
    command: "${service_memcached14_command}"

  redis30:
    labels:
      - "${service_redis30_label_url}.description=${service_redis30_description}"
      - "${service_redis30_label_url}.vendor=${project_vendor}"
      - "${service_redis30_label_url}.license=${project_license}"
      - "${service_redis30_label_url}.architecture=${project_architecture}"
      - "${service_redis30_label_url}.version=${project_version}"
    image: "${service_redis30_image_url}"
    build:
      context: "${general_context}"
      dockerfile: "${service_redis30_dockerfile}"
      args:
        app_redis_user: "${service_redis30_args_app_redis_user}"
        app_redis_group: "${service_redis30_args_app_redis_group}"
        app_redis_loglevel: "${service_redis30_args_app_redis_loglevel}"
        app_redis_listen_addr: "${service_redis30_args_app_redis_listen_addr}"
        app_redis_listen_port: "${service_redis30_args_app_redis_listen_port}"
        app_redis_listen_timeout: "${service_redis30_args_app_redis_listen_timeout}"
        app_redis_listen_keepalive: "${service_redis30_args_app_redis_listen_keepalive}"
        app_redis_limit_backlog: "${service_redis30_args_app_redis_limit_backlog}"
        app_redis_limit_concurent: "${service_redis30_args_app_redis_limit_concurent}"
        app_redis_limit_memory: "${service_redis30_args_app_redis_limit_memory}"
    logging:
      driver: "${general_logging_driver}"
    networks:
      - backend
    ports:
      - "${service_redis30_networking_port_int1}"
      - "${service_redis30_networking_port_int2}"
    working_dir: "${general_working_dir}"
    command: "${service_redis30_command}"

  mysql55:
    labels:
      - "${service_mysql55_label_url}.description=${service_mysql55_description}"
      - "${service_mysql55_label_url}.vendor=${project_vendor}"
      - "${service_mysql55_label_url}.license=${project_license}"
      - "${service_mysql55_label_url}.architecture=${project_architecture}"
      - "${service_mysql55_label_url}.version=${project_version}"
    image: "${service_mysql55_image_url}"
    build:
      context: "${general_context}"
      dockerfile: "${service_mysql55_dockerfile}"
      args:
        app_mysql_user: "${service_mysql55_args_app_mysql_user}"
        app_mysql_group: "${service_mysql55_args_app_mysql_group}"
        app_mysql_listen_addr: "${service_mysql55_args_app_mysql_listen_addr}"
        app_mysql_listen_port: "${service_mysql55_args_app_mysql_listen_port}"
    logging:
      driver: "${general_logging_driver}"
    networks:
      - backend
    ports:
      - "${service_mysql55_networking_port_int1}"
      - "${service_mysql55_networking_port_int2}"
    working_dir: "${general_working_dir}"
    command: "${service_mysql55_command}"

#
# Networks
#
networks:
  default:
    driver: "${general_network_driver}"
  proxy:
    driver: "${general_network_driver}"
  frontend:
    driver: "${general_network_driver}"
  application:
    driver: "${general_network_driver}"
  backend:
    driver: "${general_network_driver}"

